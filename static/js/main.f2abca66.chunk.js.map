{"version":3,"sources":["images/github_logo_icon.png","images/star_icon.png","images/fork_icon.png","images/Octocat.png","images/code.png","components/header/index.js","components/form/index.js","components/userRepositories/index.js","components/userData/index.js","components/description/index.js","components/Home/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","index","react_default","a","createElement","className","src","logo","alt","React","Component","TextField","color","onChange","this","props","userName","id","label","type","variant","onKeyDown","keyPressed","Button","onClick","handleClick","errorMessage","repos","name","fork","forks","language","star","stargazers_count","href","html_url","profile","avatar_url","bio","followers","following","public_repos","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","text1","text2","octocat","code","axios","require","isEnter","e","keyCode","search","getProfile","getUserName","setState","target","value","userData","baseUrl","client_id","process","CLIENT_ID","client_secret","CLIENT_SECRET","userRepos","username","_this2","get","concat","then","userResponse","data","catch","err","console","log","reposResponse","onlyfour","sort","splice","response","message","b","_this$state","header_index","form_index","length","userData_index","map","repo","userRepositories_index","description_index","github","Boolean","window","location","hostname","match","ReactDOM","render","Home_index","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.f2abca66.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github_logo_icon.84134458.png\";","module.exports = __webpack_public_path__ + \"static/media/star_icon.04c99d7f.png\";","module.exports = __webpack_public_path__ + \"static/media/fork_icon.24f36bf6.png\";","module.exports = __webpack_public_path__ + \"static/media/Octocat.0ba2aa20.png\";","module.exports = __webpack_public_path__ + \"static/media/code.a77b250f.png\";","import React from 'react';\nimport logo from '../../images/github_logo_icon.png'\nimport './index.css'\n\nexport default class index extends React.Component{\n  render () {\n    return (\n      <div className=\"container_header\">\n        <img className=\"editImage\" src={logo} alt=\"GitHub_logo\"/>\n\n        <span className=\"title\">GitHub Search</span>\n\n      </div>\n\n    );\n  }\n}","import React from 'react';\nimport { TextField, Button} from '@material-ui/core'\n\nimport './index.css'\n\n\nexport default class index extends React.Component{\n\n  render () {\n    return (\n      <div className=\"container_form\">\n        <div className=\"container_intern_form\">\n          <TextField color=\"primary\" \n            onChange={this.props.userName} \n            id=\"input\" \n            className=\"input_text\" \n            label=\"Search username\" \n            type=\"search\" \n            variant=\"outlined\" \n            onKeyDown={this.props.keyPressed}/>\n\n          <Button onClick={this.props.handleClick} className=\"button\" variant=\"outlined\" color=\"primary\">Search</Button>\n        </div>\n\n      \n        <span className=\"span_error\">{this.props.errorMessage}</span>\n        \n      </div>\n    );\n  }\n}","import React from 'react'\nimport star from '../../images/star_icon.png'\nimport fork from '../../images/fork_icon.png'\nimport { Button} from '@material-ui/core'\nimport './index.css'\n\n\nexport default class index extends React.Component{\n  \n  render(){\n    return (\n      <div className=\"container_repo\">\n        <span>{this.props.repos.name}</span>\n\n        <div> \n          <img className=\"image_repo\" src={fork} alt=\"fork_icon\"/>\n          <span>{this.props.repos.forks}</span>\n        </div>\n\n        <span>{this.props.repos.language}</span>\n\n        <div> \n          <img className=\"image_repo\" src={star} alt=\"star_icon\"/>\n          <span>{this.props.repos.stargazers_count}</span>\n        </div>\n\n        <Button href={this.props.repos.html_url} color=\"primary\" variant=\"outlined\">Go to GitHub</Button>\n\n      </div>\n    );\n  }\n}","import React from 'react';\nimport './index.css'\n\nexport default class index extends React.Component{\n  render () {\n    return (\n      <div className=\"container_user_data\">\n        <img className=\"profile_pic\" src={this.props.profile.avatar_url} alt=\"profile_pic\" />\n        \n        <div className=\"description\">\n          <span><strong>Name:</strong> {this.props.profile.name}</span>\n          <span><strong>Bio:</strong> {this.props.profile.bio}</span>\n          <span><strong>Followers:</strong> {this.props.profile.followers}</span>\n          <span><strong>Following:</strong> {this.props.profile.following}</span>\n          <span><strong>Repositories:</strong> {this.props.profile.public_repos}</span>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport octocat from '../../images/Octocat.png'\nimport code from '../../images/code.png'\n\nimport './index.css'\n\nexport default class index extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      text1: 'Search app that uses GitHub API to retrieve user information when a valid username is input. It display avatar, username, followers count, repository count, top 4 repositories based on forks and stars.',\n      text2: ''\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"container_explanation\">\n        <img className=\"pic_1\" src={octocat} alt=\"octocat_img\"/>\n\n        <div className=\"intern_container_explanation\">\n          <span className=\"span_text\">{this.state.text1}</span>\n          <img className=\"pic_2\" src={code} alt=\"code_img\"/>\n          <span className=\"span_text\"></span>\n\n        </div>\n        \n      </div>\n\n    );\n  }\n}","import React from 'react';\nimport Header from '../header/'\nimport Form from '../form/'\nimport Repos from '../userRepositories/'\nimport UserData from '../userData/'\nimport Description from '../description/'\nimport './index.css'\nimport github from '../../images/github_logo_icon.png'\n\nconst axios = require('axios')\n\nrequire('dotenv/config');\n\n\nexport default class index extends React.Component{\n  constructor(props){\n    super(props)\n    \n    this.state = {\n      userName: '',\n      baseUrl: \"http://api.github.com/users/\",\n      client_id: process.env.CLIENT_ID,\n      client_secret: process.env.CLIENT_SECRET,\n      userData: [],\n      userRepos: [],\n      errorMessage: ''\n    }\n  }\n\n  getProfile(username){\n\n    axios.get(`${this.state.baseUrl}${username}?client_id=${this.state.client_id}&client_secret=${this.state.client_secret}`)\n      .then((userResponse => {\n        this.setState({userData: userResponse.data})\n      }))\n      .catch(err => {\n        this.setState({userData: []})\n        console.log(err)\n      });\n\n    axios.get(`${this.state.baseUrl}${username}/repos?client_id=${this.state.client_id}&client_secret=${this.state.client_secret}`)\n      .then((reposResponse => {\n        const ordenados = this.sort(reposResponse)\n        const onlyfour = ordenados.splice(0,4)\n        this.setState({userRepos: onlyfour, errorMessage: ''})\n      }))\n      .catch(err => {\n        this.setState({userRepos: [], errorMessage: err.response.data.message})\n        console.log(err)\n      })\n\n      /*axios.post(`${this.state.baseUrl}${username}`,\n        this.params = {\n          client_id: `${this.state.user}`,\n          client_secret: `${this.state.password}`,\n          grant_type: \"client_credentials\"\n      })\n    .then((res) => {\n      axios.post(`${this.state.baseUrl}${username}/repos`,\n        this.params = {\n          client_id: `${this.state.user}`,\n          client_secret: `${this.state.password}`,\n          grant_type: \"client_credentials\"\n        })  \n        .then((repos) => {\n            let ordenados = this.sort(repos)\n            ordenados = ordenados.splice(0,4)\n\n            this.setState({userRepos: ordenados})\n            this.setState({userData: res.data})\n          })\n    })*/\n  }\n  \n  // ordena o array de acordo com o numero de forks e stars\n  sort(repos){\n    const sortedData = repos.data.sort(\n      (b, a) => a.forks + a.stargazers_count - (b.forks + b.stargazers_count),\n    );\n  \n    return sortedData\n  }\n\n  isEnter = (e) => {\n    if(e.keyCode === 13){\n      this.search()\n    }\n\n  }\n\n  search = () => {\n    this.getProfile(this.state.userName)\n  }\n\n  getUserName = (e) => {\n    this.setState({userName: e.target.value})\n    \n    // se nao tiver nenhuma letra na pesquisa, fecha-se o profile\n    if(e.target.value === ''){\n      this.setState({userData: [], errorMessage: ''})\n    }\n  }\n\n  render (){\n    const { userData, userRepos } = this.state\n\n    return (\n      <div className=\"Home\">\n        <Header />\n        <Form userName={this.getUserName} handleClick={this.search} keyPressed={this.isEnter} errorMessage={this.state.errorMessage} />\n        {userData.length !== 0 ? \n        \n          ( <div className=\"data\"> \n            <UserData profile={this.state.userData}/> \n            <div className=\"data_container\">\n                <div className=\"repos_container\">\n                  {userRepos.map(repo => <Repos repos={repo} />)}\n                </div>\n              </div>\n          </div>)\n\n          : <Description />}\n\n        <span className=\"created\">By Vitor Reis - <img className=\"github_icon\" alt=\"github_logo\" src={github}/><strong>/reisvitt</strong></span>\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './components/Home/';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}